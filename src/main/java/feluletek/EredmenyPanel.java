/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feluletek;

import alaposztalyok.Eredmeny;
import alaposztalyok.RendezhetoListModel;
import java.util.List;
import vezerlo.Vezerlo;

/**
 *
 * @author varga
 */
public class EredmenyPanel extends javax.swing.JPanel {
    private Vezerlo vezerlo;
    private RendezhetoListModel felhasznaloEredmenyekModell=new RendezhetoListModel();
    private RendezhetoListModel globalisEredmenyekModell=new RendezhetoListModel();
    /**
     * Creates new form EredmenyPanel
     */
    public EredmenyPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_felhEredmenyei = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lst_FelhEredmenyek = new javax.swing.JList<>();
        lbl_Global = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lst_GlobalEredmenyek = new javax.swing.JList<>();

        setBackground(new java.awt.Color(204, 255, 255));
        setMaximumSize(new java.awt.Dimension(400, 300));
        setMinimumSize(new java.awt.Dimension(400, 300));
        setPreferredSize(new java.awt.Dimension(400, 300));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        lbl_felhEredmenyei.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        lbl_felhEredmenyei.setForeground(new java.awt.Color(255, 153, 51));
        lbl_felhEredmenyei.setText("jLabel1");

        jScrollPane1.setViewportView(lst_FelhEredmenyek);

        lbl_Global.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 12)); // NOI18N
        lbl_Global.setForeground(new java.awt.Color(255, 153, 51));
        lbl_Global.setText("Mindenkori legjobbak");

        jScrollPane2.setViewportView(lst_GlobalEredmenyek);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_felhEredmenyei, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Global)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_felhEredmenyei)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_Global)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Beállítja a modelleket, és betölti a ranglistát
     * @param evt 
     */
    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        vezerlo.ranglistaBetoltes();
        lst_FelhEredmenyek.setModel(felhasznaloEredmenyekModell);
        lst_GlobalEredmenyek.setModel(globalisEredmenyekModell);
    }//GEN-LAST:event_formAncestorAdded

    public void setVezerlo(Vezerlo vezerlo) {
        this.vezerlo = vezerlo;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_Global;
    private javax.swing.JLabel lbl_felhEredmenyei;
    private javax.swing.JList<String> lst_FelhEredmenyek;
    private javax.swing.JList<String> lst_GlobalEredmenyek;
    // End of variables declaration//GEN-END:variables
    /**
     * Beállítja a játékos nevét
     * @param nev 
     */
    public void jatekosNevBeallit(String nev){
    lbl_felhEredmenyei.setText(nev+" pontszámai");
    }
        /**
         * Modellbe írja az eredményeket, melyek a játékosé
         * @param eredmenyek 
         */
    public void jatekosEredmenyKiiras(List<Eredmeny> eredmenyek) {
        for (Eredmeny eredmeny : eredmenyek) {
            felhasznaloEredmenyekModell.addElement(eredmeny, true);
        }
    }
    /**
     * Az összes eredményt modellbe írja
     * @param eredmenyek 
     */
    public void osszesEredmenyKiiras(List<Eredmeny> eredmenyek){
        for (Eredmeny eredmeny : eredmenyek) {
            globalisEredmenyekModell.addElement(eredmeny, true);
        }
    }
    
}
